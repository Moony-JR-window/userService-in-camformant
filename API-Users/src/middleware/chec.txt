import { Request, Response, Router } from 'express';
import { CognitoJwtVerifier } from 'aws-jwt-verify';
import configs from '../config';

// Initialize the JWT verifier
const refreshTokenVerifier = CognitoJwtVerifier.create({
    userPoolId: configs.userPoolID,
    tokenUse: 'access', // 'access' for access tokens, adjust if needed
    clientId: configs.clientID,
    clientSecret: configs.clientSecret // Optional, depending on your setup
});

const authRouter = Router();

// Refresh token endpoint
authRouter.post('/refresh-token', async (req: Request, res: Response) => {
    const { refreshToken } = req.body;

    if (!refreshToken) {
        return res.status(400).json({ message: 'Refresh token is required' });
    }

    try {
        // Verify the refresh token
        const payload = await refreshTokenVerifier.verify(refreshToken);
        console.log("Refresh token verified:", payload);

        // Generate new access token logic (e.g., using Cognito service)
        // Example response with new tokens
        res.json({
            accessToken: 'new-access-token', // Replace with actual token generation logic
            refreshToken: 'new-refresh-token' // Replace with actual refresh token generation logic
        });
    } catch (error) {
        console.error('Refresh token verification failed:', error);
        res.status(401).json({ message: 'Invalid refresh token' });
    }
});

export default authRouter;
